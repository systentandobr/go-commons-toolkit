version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-agent-app
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./data:/app/data
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - ecommerce-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:14-alpine
    container_name: ecommerce-agent-db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce_agent
    networks:
      - ecommerce-network

  redis:
    image: redis:7-alpine
    container_name: ecommerce-agent-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  mongodb:
    image: mongo:6
    container_name: ecommerce-agent-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    networks:
      - ecommerce-network

  metrics:
    image: prom/prometheus:v2.45.0
    container_name: ecommerce-agent-metrics
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - ecommerce-network

  dashboard:
    image: grafana/grafana:10.0.3
    container_name: ecommerce-agent-dashboard
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - metrics
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  prometheus_data:
  grafana_data:
